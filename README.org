* LISP Build System

A lil LISPy build system.

#+begin_src lisp :tangle .lbs
;; Yeah, this is a lisp-build-system build file for lisp-build-system
;; itself... bootstrappy!

(library libparser)
(include-directories libparser inc)
(sources libparser lib/parser/parser.cpp)
(flags libparser -Wall -Wextra -Wpedantic -Werror)

(library libtests)
(include-directories libtests inc)
(sources libtests lib/tests/tests.cpp)
(flags libtests -Wall -Wextra -Wpedantic -Werror)
(dependency libtests libparser)

(executable lbs)
(include-directories lbs inc)
(sources lbs src/main.cpp)
(flags lbs -Wall -Wextra -Wpedantic -Werror)
(dependency lbs libparser)
(dependency lbs libtests)
;; (defines lbs -DLBS_TEST)
#+end_src lisp

To use the build system, first of all build it. This can be done by bootstrapping with a pre-built binary or by using CMake. Either way, once you have an =lbs= binary available, just run it (with the =-n= argument signifying a dry run) from this directory (or any directory with a =.lbs= build scenario description file). Most commonly this looks something like =./bld/lbs -n=.

What you'll see is a command or commands that should look familiar to you if you've compiled a C or C++ project before, along with a few self-explanatory actions like file copies, deletions, etc.

Iff the commands look like something you are okay with running on your system, you can use =./bld/lbs= to run them. If you are in this directory, you will end up with an executable at =./lbs=.
